给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。

回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，121 是回文，而 123 不是。

示例 1：

输入：x = 121
输出：true

示例 2：

输入：x = -121
输出：false
解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。

示例 3：

输入：x = 10
输出：false
解释：从右向左读, 为 01 。因此它不是一个回文数。

示例 4：

输入：x = -101
输出：false

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/palindrome-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
#####################################################################################
题解：

class Solution(object):
    def isPalindrome(self, x):
        """
        :type x: int
        :rtype: bool
        """
        string_x = str(x)
        return string_x == string_x[::-1] # 转换为字符串进行颠倒对比
        
        ###########################################################
        # size = len(string_x)
        
        # #dp动态規劃 （有问题：无法辨别出True）
        # dp = [[False for _ in range(size)] for _ in range(size)]

        # for j in range(1, size):
        #     for i in range(j):
        #         if j - i <= 2:
        #             if string_x[i] == string_x[j]:
        #                 dp[i][j] == True
        #         else:
        #             if string_x[i] == string_x[j] and dp[i+1][j-1]:
        #                 dp[i][j] == True
            
        #         if dp[i][j] == True:
        #             return True
        #         else:
        #             return False

        ###########################################################
        # return True if x >= 0 and x == int(string_x[::-1]) else False # 转换回int形式进行对比 
